import html
from datetime import datetime
from pathlib import Path

RESULTS_DIR = Path("results")
RESULTS_DIR.mkdir(exist_ok=True)
ERROR_LOG = RESULTS_DIR / "errors.log"

def html_escape(text):
    return html.escape(text)

def save_html(usernames, results, stats):
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    uname_part = "_".join(usernames)
    fname = RESULTS_DIR / f"{uname_part}_scan_{timestamp}.html"
    found_rows = [r for r in results if r['found']]
    not_found_rows = [r for r in results if not r['found']]

    chart_data = f"""
    const data = {{
      labels: ['FOUND', 'Not Found'],
      datasets: [{{
        data: [{len(found_rows)}, {len(not_found_rows)}],
        backgroundColor: ['#43aa8b', '#d3d3d3'],
      }}]
    }};
    """

    with open(fname, "w", encoding="utf-8") as f:
        f.write(f"""<!DOCTYPE html>
<html lang="en"><head>
<meta charset="UTF-8">
<title>IGT Social Results for {html_escape(uname_part)}</title>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
body {{ font-family: 'Segoe UI', Arial, sans-serif; margin:2em; background:#fafbfc; }}
h1 {{ color:#1d3557; margin-bottom:0.5em; }}
table {{ border-collapse:collapse; width:100%; background:white; box-shadow:0 2px 10px #0001; }}
th,td {{ border:1px solid #dee2e6; padding:10px; text-align:left; }}
th {{ background:#457b9d; color:#fff; }}
tr:nth-child(even) {{ background:#f5f6fa; }}
a {{ color:#1976d2; word-break:break-all; }}
.status-ok {{ color:green; font-weight:bold; }}
.status-fail {{ color:#888; }}
.stats-block {{
  margin: 2em 0 2em 0; background: #fff; padding: 1em 2em; border-radius: 12px; box-shadow:0 2px 10px #0001;
}}
</style>
</head><body>
<h1>IGT Social Scan for <span style="color:#457b9d">{html_escape(uname_part)}</span></h1>
<p>Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>

<div class="stats-block">
  <h2>Summary</h2>
  <ul>
    <li><b>Total platforms:</b> {stats['platforms']}</li>
    <li><b>Total usernames:</b> {stats['usernames']}</li>
    <li><b>Total checks:</b> {len(results)}</li>
    <li><b>Profiles found:</b> {len(found_rows)}</li>
    <li><b>Profiles not found:</b> {len(not_found_rows)}</li>
    <li><b>Scan duration:</b> {stats['duration']} seconds</li>
  </ul>
  <canvas id="foundChart" width="320" height="120"></canvas>
</div>

<table>
<tr>
<th>Platform</th>
<th>Username</th>
<th>Status</th>
<th>Link</th>
</tr>
""")
        for row in results:
            plat = html_escape(row['platform'].capitalize())
            uname = html_escape(row['username'])
            status = '<span class="status-ok">FOUND</span>' if row['found'] else '<span class="status-fail">Not Found</span>'
            link = f'<a href="{html_escape(row["url"])}" target="_blank">{html_escape(row["url"])}</a>'
            f.write(f"<tr><td>{plat}</td><td>{uname}</td><td>{status}</td><td>{link}</td></tr>\n")
        f.write(f"""
</table>
<footer style="margin-top:2em;color:#888;">Generated by IGT Toolkit</footer>
<script>
{chart_data}
const config = {{
  type: 'pie',
  data: data,
}};
new Chart(document.getElementById('foundChart'), config);
</script>
</body></html>
""")
    print(f"[+] HTML result saved to {fname}")

def log_error(msg):
    with open(ERROR_LOG, "a", encoding="utf-8") as f:
        f.write(f"{datetime.now().isoformat()} | {msg}\n")
